
🔧 삭제 405 해결용 서버 패치 (app.py 수정)

문제: /document/<id>/delete 엔드포인트가 GET만 받고 있어 POST로 요청하면 405가 발생합니다.
해결: 동일 경로에 POST 핸들러를 추가하여 실제 삭제를 수행합니다.

1) app.py(또는 라우트 정의 파일)에 아래 코드를 추가하세요.
   (이미 유사 라우트가 있으면 methods=['POST']가 포함되어 있는지 확인해주세요.)

-------------------------------------------------------------------
from flask import redirect, url_for, abort, g, flash
# db, Document는 기존 import 그대로 사용

@app.post('/document/<int:doc_id>/delete')
def delete_document(doc_id):
    # 로그인 필수라면 적절히 체크
    if not getattr(g, 'user', None):
        return redirect(url_for('login'))
    doc = Document.query.get_or_404(doc_id)

    # 시스템 문서 보호 (필요 없으면 제거)
    if getattr(doc, 'is_system', False):
        abort(403)

    db.session.delete(doc)
    db.session.commit()
    # 플래시 메시지를 쓰고 있다면:
    try:
        flash('문서를 삭제했습니다.', 'success')
    except Exception:
        pass
    return redirect(url_for('index'))
-------------------------------------------------------------------

2) templates/index.html을 본 패치의 파일로 교체합니다.
   - 각 문서 오른쪽에 삭제 버튼(POST)이 표시됩니다.
   - 확인 대화상자 후 서버로 POST 전송합니다.

3) 서버 재시작/재배포 후 홈 목록에서 삭제 버튼을 눌러 동작을 확인하세요.

참고:
- 이미 '/document/<int:doc_id>/delete'의 GET 라우트가 있다면 그대로 두고,
  위 POST 라우트를 추가로 선언해도 문제 없습니다(엔드포인트 이름만 다르면 됨).
- CSRF 미사용 환경 기준입니다. CSRF를 쓰신다면 토큰 필드를 템플릿에 추가하세요.
